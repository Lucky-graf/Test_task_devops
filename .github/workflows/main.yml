name: CI_CD
on:
  push:
    branches: [reserve-brench, master]
  workflow_dispatch:
      

jobs:

  test:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test'
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: Clone reppo
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.3.0
        with:
          node-version: 14
      - name: Install Dependencies
        run : |
          npm install
          yarn install
      - name: Run Testing
        run : npm test --watchAll=false
        
  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        file: Dockerfile.back
        push: true
        tags: bodya1601/todo:latest
        
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test'
    #if: ${{ !failure() }}
    env: 
      REACT_APP_HOST: ${{ secrets.SERVER_IP }}
    needs: docker
    steps:
      - name: Clone reppo
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.3.0
        with:
          node-version: 14
      - name: Install Dependencies
        run : |
          ls
          cd client
          ls
          yarn install
          npm install
          ls
      - name: Run Build App
        run : |
          cd client
          npm run build
          ls
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.front
          push: true
          tags: bodya1601/todo-front:latest

        
        
  deploy:
    runs-on: ubuntu-latest
    #if: github.ref == 'refs/heads/test'
    if: ${{ !failure() }}
    needs: build
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with: 
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.USER_NAME }}
        port: 22
        key: ${{ secrets.SSH_PRIVET_KEY }}
        envs:  DB_USER, DB_PASSWORD
        script: 
          echo "I am $DB_USER"
          curl ifconfig.me 
    
    


        
